//
// Color step
//

//
// clr-step
// Functions used to return step of a given color.
//
// Parameters:
// {Color} $color - Color
// {Number} $step - color step number
// [optional] {Number} $color-step-interval - How much to mix $base-color into $color in each step
//
// Return:
// {Color} value of color step
//
@function clr-step($color, $step, $color-step-interval: 10%) {
  @if unit($color-step-interval) != "%" {
    @error "invalid value of $color-step-interval `#{$color-step-interval}` , The value unit must be `%`";
  }
  @if not unitless($step) {
    @error "invalid value of $step `#{$step}` , The value must not have a unit";
  }
  @if $step * $color-step-interval > 100 or $step * $color-step-interval < -100 {
    @error "invalid value of $step `#{$step}` , The value must be in-between `#{100% / $color-step-interval}` - `#{-1 * 100% / $color-step-interval }`";
  }

  // invert clr-step function output depending on $design-theme
  $theme-color: if($design-theme == light, 1, -1);
  $step: $step * $theme-color;

  $base-color: if($step > 0, $black, $white);
  $step: abs($step);
  @return mix($base-color, $color, $step * $color-step-interval);
}
