//
// Buttons
//

@if $generate-component-classes {
  //
  // Base styles
  //

  .btn {
    @extend %controls;
    @extend %controls-active;
    @extend %controls-hover;
    @extend %controls-focus;

    text-align: center;
    font-family: $button-font;

    @include not-disabled {
      @extend %cursor-pointer; // add "hand" cursor to non-disabled button elements.
    }
  }

  //
  // Theme Variants
  //

  // Solid Theme
  .btn.is-sld {
    //
    // Default Solid Styles
    //
    $focus-background: clr-step($button-theme, -2);
    $active-background: clr-step($button-theme, 4);

    color: clr-auto($button-theme);
    @include gradient-background($button-theme, 180deg);

    @include hover {
      // to avoid adding extra box-shadow override
      // - box-shadow($button-focus-boxshadow rgba($button-theme, 0.5)) is already inside default controls
      @if $button-focus-boxshadow != $controls-focus-boxshadow and $button-theme != $controls-theme {
        box-shadow: box-shadow($button-focus-boxshadow rgba($button-theme, .5));
      }
    }

    @include focus {
      @include gradient-background($focus-background, 180deg);
    }

    @include active {
      color: clr-auto($active-background);
      @if $design-solid-or-gradients == "solid" {
        background-color: $active-background;
      }
    }

    &.is-loading {
      @include loading-spinner-color(clr-auto($button-theme));
    }

    //
    // Color variants
    //
    @each $color, $value in $theme-colors {
      &.is-#{$color} {
        @include button-design-solid-variant($value);
      }
    }

    //
    // States
    //
    @include focus {
      @include animation(ripple-gray); // ripple animation on click event
    }

    @include active {
      @if $design-solid-or-gradients != "solid" {
        background-image: none; // Remove the gradient for the pressed/active state
      }
    }

    @include disabled {
      color: $white;
      background: $button-disabled-background;
      @if $design-solid-or-gradients != "solid" {
        background-image: none; // Remove CSS gradients if they're enabled
      }
    }
  }

  // Solid Theme
  .btn.is-fillout {
    padding: ($controls-padding-y - convert-unit($borderwidth-wide - 1, em)) ($controls-padding-x - convert-unit($borderwidth-wide - 1, em)); // decrease padding bottom by the same width we are increasing border to make layout unaffected by design change
    border-width: $borderwidth-wide;
    border-color: $button-theme;
    //
    // Default Solid Styles
    //
    color: clr-auto($button-theme);
    @include gradient-background($button-theme, 180deg);

    @include button-design-fillout-variant($button-theme); // Default button theme

    // Color variants
    @each $color, $value in $theme-colors {
      &.is-#{$color} {
        @include button-design-fillout-variant($value);
      }
    }

    @include hover-focus-active {
      border-color: currentColor;
      background: transparent;
    }

    &.is-loading {
      @include loading-spinner-color(clr-auto($button-theme));
    }

    @include disabled {
      color: $white;
      background: $button-disabled-background;
    }
  }

  // Outline theme
  .btn.is-out {
    //
    // Default Outline Styles
    //
    border-color: $button-theme-light;

    @include focus-active {
      border-color: currentColor;
    }

    @include button-design-outline-variant($button-theme); // Default button theme

    // Color variants
    @each $color, $value in $theme-colors {
      &.is-#{$color} {
        @include button-design-outline-variant($value);
      }
    }

    @include disabled {
      border-color: $button-disabled-background;
      color: $button-theme;
    }
  }

  // Minimal theme
  .btn.is-min {
    //
    // Default Minimal Styles
    //
    border-right: 0; // remove border to remove border spacing between minimal button groups
    border-bottom-color: $controls-theme-light;
    border-left: 0; // remove border to remove border spacing between minimal button groups
    border-radius: border-radius(0);
    box-shadow: box-shadow(none); // remove focus box shadow

    @include before {
      content: "";
      position: absolute;
      // right: 0;
      bottom: -1px;
      left: 0%;
      // transform: translateX(-50%);
      width: 0;
      border-bottom: $borderwidth-default * 2 solid;
      @include transition($button-transition-minimal-before);
    }

    @include button-design-minimal-variant($button-theme); // Default button theme

    // Color variants
    @each $color, $value in $theme-colors {
      &.is-#{$color} {
        @include button-design-minimal-variant($value);
      }
    }

    @include active {
      @include before {
        @include animation(none);
      }
    }

    @include hover-focus-active {
      @include before {
        width: 100%;
      }
    }

    @include focus {
      @include animation(none); // disable animations and play again on click event
      border-bottom-color: transparent;
      @include before {
        @include animation(flash);
      }
    }

    @include disabled {
      color: $button-theme;
      @include before {
        border-bottom-color: $button-disabled-background;
      }
    }
  }

  // disabled button need to be at end to override previous selectors
  // stylelint-disable-next-line no-duplicate-selectors
  .btn {
    @include disabled {
      @extend %controls-disabled;
    }
  }

  //
  // Unstyle Button
  //

  .btn.is-unstyle {
    @include animation(none); // remove animation from button
    @include transition(none); // remove transition from button
    padding: 0; // remove padding from button
    box-shadow: none; // remove box-shadow from button
  }

  //
  // Loading Animation
  //

  .btn.is-loading {
    // stylelint-disable-next-line declaration-no-important
    color: transparent !important;
    @include loading-spinner-color($button-theme);
  }

  //
  // Block
  //

  .btn.is-block {
    width: 100%;
  }

  //
  // Round Circle
  //

  // useful for button with only icons
  .btn.is-circle {
    display: inline-flex; // used to fix alignment of icon inside
    padding: .6em;
    line-height: 1;
  }
}
