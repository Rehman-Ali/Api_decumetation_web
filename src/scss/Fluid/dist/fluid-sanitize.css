/**
 * Fluid Sanitize v0.20.1
 * Copyright (c) 2019-2027 Fluid Framework
 * Copyright (c) 2019-2027 Ashfahan
 * Licensed under MIT (https://github.com/fluid-framework/Fluid/blob/master/LICENSE)
*/
main, legend, details {
  display: block;
}

label, progress,
audio,
video, output {
  display: inline-block;
}

sub,
sup, progress {
  vertical-align: baseline;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"], ::-webkit-file-upload-button {
  -webkit-appearance: button;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"], [type="search"] {
  -webkit-appearance: textfield;
}

legend {
  color: inherit;
}

input, button,
select,
optgroup,
textarea, legend {
  line-height: inherit;
}

::-moz-focus-inner, input[type="radio"],
input[type="checkbox"], fieldset, legend {
  padding: 0;
}

hr, fieldset {
  border: 0;
}

::-moz-focus-inner {
  border-style: none;
}

h1, h2, h3, h4, h5, h6, ol,
ul,
dl, p, pre {
  margin-top: 0;
}

body, input, button,
select,
optgroup,
textarea, fieldset {
  margin: 0;
}

pre,
textarea {
  overflow: auto;
}

select:not([disabled]):not(:disabled),
button:not([disabled]):not(:disabled),
[type="file"]:not([disabled]):not(:disabled),
[type="button"]:not([disabled]):not(:disabled),
[type="reset"]:not([disabled]):not(:disabled),
[type="submit"]:not([disabled]):not(:disabled),
[type="range"]:not([disabled]):not(:disabled) {
  cursor: pointer;
}

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 0.5em;
  color: #0f0f0f;
  font-weight: 500;
  line-height: 1.2;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  box-sizing: border-box;
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}

[tabindex="-1"]:focus:not(:focus-visible) {
  outline: 0 !important;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 75%;
}

h1 {
  margin-bottom: .67em;
  font-size: 2em;
}

hr {
  color: inherit;
  background-color: currentColor;
}

hr:not([size]) {
  height: 1px;
}

abbr[title],
abbr[data-original-title] {
  cursor: help;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  -webkit-text-decoration-skip-ink: none;
          text-decoration-skip-ink: none;
}

pre,
code,
kbd,
samp {
  font-family: "Menlo", "Ubuntu monospace", "Noto Mono", "Oxygen Mono", "Liberation Mono", consolas, monospace;
  font-size: 1em;
}

pre {
  margin-bottom: 1rem;
}

sub,
sup {
  position: relative;
  line-height: 0;
  font-size: 75%;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

dd {
  margin-left: 0;
}

dl dl,
dl ol,
dl ul,
ol dl,
ul dl,
ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

svg {
  overflow: hidden;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

table {
  border-collapse: collapse;
}

th {
  text-align: inherit;
}

button {
  border-radius: 0;
}

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  font-family: inherit;
  font-size: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

select {
  word-wrap: normal;
}

::-ms-thumb {
  box-sizing: inherit;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box;
}

[list]::-webkit-calendar-picker-indicator {
  display: none;
}

textarea {
  resize: vertical;
}

fieldset {
  min-width: 0;
}

legend {
  white-space: normal;
}

::-webkit-datetime-edit {
  overflow: visible;
  line-height: 0;
}

[type="search"] {
  outline-offset: -2px;
}

::-webkit-file-upload-button {
  font: inherit;
}

summary {
  display: list-item;
  cursor: pointer;
}

template {
  display: none;
}

[hidden] {
  display: none !important;
}

:root {
  font-size: 14px;
}

body {
  color: #474747;
  background-color: #fafafa;
  text-align: left;
  text-align: start;
  -moz-tab-size: 4;
    -o-tab-size: 4;
       tab-size: 4;
  font-family: -apple-system, blinkmacsystemfont, "Segoe UI", "PingFang SC", "Hiragino Sans GB", "Ubuntu", "Cantarell", "Noto Sans", "Helvetica Neue", arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 400;
}

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-bottom: 1rem;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: 0.5em;
}

a {
  color: #805ad5;
  text-decoration: none;
}

a:hover {
  color: #5a3f95;
  text-decoration: underline;
}

a[disabled], a:disabled {
  pointer-events: none;
  opacity: 0.5;
}

a:not([href]), a:not([href]):hover {
  color: inherit;
  text-decoration: none;
}

svg:not([fill]) {
  fill: currentColor;
}

svg:not(:root) {
  overflow: hidden;
}

caption {
  caption-side: bottom;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #636363;
  text-align: left;
}

label {
  margin-bottom: 0.5em;
}

legend {
  margin-bottom: .5rem;
  font-size: 1.25rem;
}

select::-ms-expand {
  border: 0;
  background-color: transparent;
}

b,
strong {
  font-weight: bolder;
}

h1 {
  font-size: 2.5rem;
}

h2 {
  font-size: 2rem;
}

h3 {
  font-size: 1.75rem;
}

h4 {
  font-size: 1.5rem;
}

h5 {
  font-size: 1.25rem;
}

h6 {
  font-size: 1rem;
}

p {
  margin-bottom: 0.5em;
}

mark {
  padding: 0.25em;
  background-color: #ffe58f;
}

hr {
  margin: 1em 0;
  opacity: 0.25;
}

blockquote {
  margin: 0 0 0.5em;
}

address {
  margin-bottom: 0.5em;
  font-style: normal;
  line-height: inherit;
}

code {
  padding: 0.2em 0.4em 0.1em;
  margin-right: 0.2em;
  margin-left: 0.2em;
  border-radius: 0.25em;
  background: #d4d4d4;
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
  font-size: 0.85em;
}

pre > code {
  font-size: inherit;
  position: relative;
  display: inline-block;
  padding: 1em;
  border-left: 3px solid #805ad5;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

pre > code[data-lang]::before {
  content: attr(data-lang);
  position: absolute;
  top: 5px;
  right: -1px;
  padding: 2px 16px 2px 8px;
  color: #fff;
  background: #805ad5;
  text-transform: uppercase;
  font-weight: 700;
  border-top-left-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
}
/*# sourceMappingURL=data:application/json;base64, */